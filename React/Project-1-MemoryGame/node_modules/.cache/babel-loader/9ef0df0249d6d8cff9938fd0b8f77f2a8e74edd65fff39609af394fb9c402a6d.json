{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\Frontend\\\\React\\\\Project-1-MemoryGame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport SingleCards from './component/SingleCards';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardsImages = [{\n  \"src\": \"/img/helmet-1.png\",\n  mached: false\n}, {\n  \"src\": \"/img/potion-1.png\",\n  mached: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  mached: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  mached: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  mached: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  mached: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardsImages, ...cardsImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    sechoiceOne(null);\n    choiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  //handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 selected cards :\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                mached: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => {\n          resetTurn();\n        }, 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  //resect choices and increase turn :\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(pervTurn => pervTurn + 1);\n    setDisabled(false);\n  };\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCards, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.mached,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns : \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8IHTU5dqoFaB4hTl9l1+JmG5DWg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCards","jsxDEV","_jsxDEV","cardsImages","mached","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","sechoiceOne","handleChoice","src","prevCards","resetTurn","setTimeout","pervTurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flipped","_c","$RefreshReg$"],"sources":["E:/Github/Frontend/React/Project-1-MemoryGame/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport SingleCards from './component/SingleCards';\nimport './App.css';\n\nconst cardsImages = [\n  {\"src\": \"/img/helmet-1.png\" , mached:false},\n  {\"src\": \"/img/potion-1.png\" , mached:false},\n  {\"src\": \"/img/ring-1.png\" , mached:false},\n  {\"src\": \"/img/scroll-1.png\" , mached:false},\n  {\"src\": \"/img/shield-1.png\" , mached:false},\n  {\"src\": \"/img/sword-1.png\" , mached:false}\n]\n\nfunction App() {\n\n  const [cards , setCards] = useState([])\n  const [turns , setTurns] = useState(0)\n\n  const [choiceOne , setChoiceOne] = useState(null)\n  const [choiceTwo , setChoiceTwo] = useState(null)\n\n  const [disabled , setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardsImages, ...cardsImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({...card, id : Math.random()}))\n\n  \n    sechoiceOne(null)\n    choiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  //handle a choice\n  const handleChoice = (card) =>{\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  // compare 2 selected cards :\n  useEffect(() => {\n    if(choiceOne && choiceTwo){\n      setDisabled(true)\n      if(choiceOne.src === choiceTwo.src){\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.src ===  choiceOne.src){\n              return{...card, mached :true}\n            }\n            else{\n              return card\n            }\n          })\n        })\n\n        resetTurn()\n      }\n      else {\n        setTimeout(() => {\n          resetTurn()\n\n        }, 1000);\n        \n      }\n    }\n\n  },[choiceOne,choiceTwo])\n\n  //resect choices and increase turn :\n  const resetTurn = () =>{\n    setChoiceOne(null)\n    setChoiceTwo(null)\n\n    setTurns(pervTurn => pervTurn + 1)\n    setDisabled(false)\n\n  }\n  useEffect(()=>{\n    shuffleCards()\n  },[])\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map((card)=>(\n          <SingleCards \n          card={card} \n          key={card.id} \n          handleChoice={handleChoice} \n          flipped={ card === choiceOne || card === choiceTwo || card.mached }\n          disabled = { disabled }\n          />\n        ))}\n      </div>\n\n      <p>Turns : {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}