{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\Frontend\\\\React\\\\Project-1-MemoryGame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport SingleCards from './component/SingleCards';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardsImages = [{\n  \"src\": \"/img/helmet-1.png\"\n}, {\n  \"src\": \"/img/potion-1.png\"\n}, {\n  \"src\": \"/img/ring-1.png\"\n}, {\n  \"src\": \"/img/scroll-1.png\"\n}, {\n  \"src\": \"/img/shield-1.png\"\n}, {\n  \"src\": \"/img/sword-1.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardsImages, ...cardsImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  //handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 selected cards :\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        console.log(\"Mach\");\n        resetTurn;\n      } else {\n        console.log(\"Not Mach\");\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  //resect choices and increase turn :\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(pervTurn => pervTurn + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCards, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uwH/PfN63+kn6E2UDC2hSG4JghM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCards","jsxDEV","_jsxDEV","cardsImages","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","console","log","resetTurn","pervTurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Github/Frontend/React/Project-1-MemoryGame/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport SingleCards from './component/SingleCards';\nimport './App.css';\n\nconst cardsImages = [\n  {\"src\": \"/img/helmet-1.png\"},\n  {\"src\": \"/img/potion-1.png\"},\n  {\"src\": \"/img/ring-1.png\"},\n  {\"src\": \"/img/scroll-1.png\"},\n  {\"src\": \"/img/shield-1.png\"},\n  {\"src\": \"/img/sword-1.png\"}\n]\n\nfunction App() {\n\n  const [cards , setCards] = useState([])\n  const [turns , setTurns] = useState(0)\n\n  const [choiceOne , setChoiceOne] = useState(null)\n  const [choiceTwo , setChoiceTwo] = useState(null)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardsImages, ...cardsImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({...card, id : Math.random()}))\n\n    setCards(shuffledCards)\n    setTurns(0)\n\n  }\n\n  //handle a choice\n  const handleChoice = (card) =>{\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  // compare 2 selected cards :\n  useEffect(() => {\n    if(choiceOne && choiceTwo){\n      if(choiceOne.src === choiceTwo.src){\n        console.log(\"Mach\");\n        resetTurn\n      }\n      else {\n        console.log(\"Not Mach\");\n      }\n    }\n\n  },[choiceOne,choiceTwo])\n\n  //resect choices and increase turn :\n\n  const resetTurn = () =>{\n    setChoiceOne(null)\n    setChoiceTwo(null)\n\n    setTurns(pervTurn => pervTurn + 1)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map((card)=>(\n          <SingleCards \n          card={card} \n          key={card.id} \n          handleChoice={handleChoice} \n          \n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}